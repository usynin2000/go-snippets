// üîπ –ó–∞–¥–∞–Ω–∏–µ 2. –í–ª–æ–∂–µ–Ω–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã

// –°–æ–∑–¥–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É Person —Å –ø–æ–ª—è–º–∏ Name –∏ Address.
// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ Address –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø–æ–ª—è City –∏ Zip.
// –°–æ–∑–¥–∞–π —á–µ–ª–æ–≤–µ–∫–∞ "Alice" –∏–∑ –≥–æ—Ä–æ–¥–∞ "Moscow" —Å –∏–Ω–¥–µ–∫—Å–æ–º "101000" –∏ –≤—ã–≤–µ–¥–∏ –µ–≥–æ –∏–º—è –∏ –≥–æ—Ä–æ–¥.

// –û–∂–∏–¥–∞–µ–º—ã–π –≤—ã–≤–æ–¥:

// Alice lives in Moscow

package main

import "fmt"


type Address struct {
	City string
	Zip int
}

type Person struct {
	Name string
	Address
}

func main() {
	p := Person{"Alice", Address{"Moscow", 123432}}

	fmt.Println(p.Name, "lives in", p.City)
}