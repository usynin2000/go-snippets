// üîπ –ú–µ—Ç–æ–¥ String()

// –°–æ–∑–¥–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É Person —Å –ø–æ–ª—è–º–∏ Name –∏ Age.
// –†–µ–∞–ª–∏–∑—É–π –¥–ª—è –Ω–µ—ë –º–µ—Ç–æ–¥ String() string, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤–∏–¥–∞:
// Name: Alice, Age: 25
// –ò –≤—ã–≤–µ–¥–∏ —á–µ—Ä–µ–∑ fmt.Println(p).
package main

import "fmt"

type Person struct {
	Name string
	Age int
}

func (p Person) String() string {
	return fmt.Sprintf("Name: %s, Age: %d", p.Name, p.Age)
}

func main() {
	p := Person{"Alice", 25}
	fmt.Println(p.String())
	// –≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –≤ Go –µ—Å—Ç—å —Ñ–∏—à–∫–∞: –µ—Å–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–µ–∞–ª–∏–∑—É–µ—Ç –º–µ—Ç–æ–¥ String() string, 
	// —Ç–æ fmt.Println(p) –≤—ã–∑—ã–≤–∞–µ—Ç –µ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ üéâ
	fmt.Println(p)

}