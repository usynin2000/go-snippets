// üîπ –ó–∞–¥–∞–Ω–∏–µ 1. –§–∏–≥—É—Ä—ã

// –°–æ–∑–¥–∞–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Shape —Å –º–µ—Ç–æ–¥–æ–º Area() float64.
// –°–¥–µ–ª–∞–π –¥–≤–∞ —Ç–∏–ø–∞:

// Rectangle {W, H float64}

// Circle {R float64}

// –û–±–∞ –¥–æ–ª–∂–Ω—ã —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å Shape.
// –í main –ø–æ–ª–æ–∂–∏ –∏—Ö –≤ —Å—Ä–µ–∑ []Shape –∏ –≤—ã–≤–µ–¥–∏ –ø–ª–æ—â–∞–¥–∏.

// –û–∂–∏–¥–∞–µ–º—ã–π –≤—ã–≤–æ–¥ (–ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ):
// Rectangle area: 20
// Circle area: 28.27

package main

import "fmt"

type Shape interface {
	Area() float64
}

type Rectangle struct {
	H, W float64
}

type Circle struct {
	R float64
}

func (r Rectangle) Area() float64 { return r.H * r.W}
func (c Circle) Area() float64 {return c.R * c.R * 3.14}

func main() {
	shapes := []Shape{
		Rectangle{4, 5},
		Circle{3},
	}

	fmt.Println("Rectangle area:", shapes[0].Area())
	fmt.Println("Circle area:", shapes[1].Area())

}